age_group == "Y20" |
age_group == "Y21" |
age_group == "Y22" |
age_group == "Y23" |
age_group == "Y24" |
age_group == "Y25" |
age_group == "Y26" |
age_group == "Y27" |
age_group == "Y28" |
age_group == "Y29" |
age_group == "Y30" |
age_group == "Y31" |
age_group == "Y32" |
age_group == "Y33" |
age_group == "Y34" |
age_group == "Y35" |
age_group == "Y36" |
age_group == "Y37" |
age_group == "Y38" |
age_group == "Y39" |
age_group == "Y40" |
age_group == "Y41" |
age_group == "Y42" |
age_group == "Y43" |
age_group == "Y44" |
age_group == "Y45" |
age_group == "Y46" |
age_group == "Y47" |
age_group == "Y48" |
age_group == "Y49" |
age_group == "Y50" |
age_group == "Y51" |
age_group == "Y52" |
age_group == "Y53" |
age_group == "Y54" |
age_group == "Y55" |
age_group == "Y56" |
age_group == "Y57" |
age_group == "Y58" |
age_group == "Y59" |
age_group == "Y60" |
age_group == "Y61" |
age_group == "Y62" |
age_group == "Y63" |
age_group == "Y64" |
age_group == "Y65" |
age_group == "Y66" |
age_group == "Y67" |
age_group == "Y68" |
age_group == "Y69" |
age_group == "Y70" |
age_group == "Y71" |
age_group == "Y72" |
age_group == "Y73" |
age_group == "Y74" |
age_group == "Y75" |
age_group == "Y76" |
age_group == "Y77" |
age_group == "Y78" |
age_group == "Y79" |
age_group == "Y80" |
age_group == "Y81" |
age_group == "Y82" |
age_group == "Y83" |
age_group == "Y84" |
age_group == "Y85" |
age_group == "Y86" |
age_group == "Y87" |
age_group == "Y88" |
age_group == "Y89" |
age_group == "Y90" |
age_group == "Y91" |
age_group == "Y92" |
age_group == "Y93" |
age_group == "Y94" |
age_group == "Y95" |
age_group == "Y96" |
age_group == "Y97" |
age_group == "Y98" |
age_group == "Y99" |
age_group == "Y100"
)
) %>%
group_by(a_iso) %>%
summarize_at("value",
sum,
na.rm = TRUE
)
colnames(z_pop_12p) <- c("a_iso","z_pop_12p")
# Filter for 18 and above
z_pop_18p <- z_pop_total %>%
filter(
gender == "BOTH" & (
age_group == "Y18" |
age_group == "Y19" |
age_group == "Y20" |
age_group == "Y21" |
age_group == "Y22" |
age_group == "Y23" |
age_group == "Y24" |
age_group == "Y25" |
age_group == "Y26" |
age_group == "Y27" |
age_group == "Y28" |
age_group == "Y29" |
age_group == "Y30" |
age_group == "Y31" |
age_group == "Y32" |
age_group == "Y33" |
age_group == "Y34" |
age_group == "Y35" |
age_group == "Y36" |
age_group == "Y37" |
age_group == "Y38" |
age_group == "Y39" |
age_group == "Y40" |
age_group == "Y41" |
age_group == "Y42" |
age_group == "Y43" |
age_group == "Y44" |
age_group == "Y45" |
age_group == "Y46" |
age_group == "Y47" |
age_group == "Y48" |
age_group == "Y49" |
age_group == "Y50" |
age_group == "Y51" |
age_group == "Y52" |
age_group == "Y53" |
age_group == "Y54" |
age_group == "Y55" |
age_group == "Y56" |
age_group == "Y57" |
age_group == "Y58" |
age_group == "Y59" |
age_group == "Y60" |
age_group == "Y61" |
age_group == "Y62" |
age_group == "Y63" |
age_group == "Y64" |
age_group == "Y65" |
age_group == "Y66" |
age_group == "Y67" |
age_group == "Y68" |
age_group == "Y69" |
age_group == "Y70" |
age_group == "Y71" |
age_group == "Y72" |
age_group == "Y73" |
age_group == "Y74" |
age_group == "Y75" |
age_group == "Y76" |
age_group == "Y77" |
age_group == "Y78" |
age_group == "Y79" |
age_group == "Y80" |
age_group == "Y81" |
age_group == "Y82" |
age_group == "Y83" |
age_group == "Y84" |
age_group == "Y85" |
age_group == "Y86" |
age_group == "Y87" |
age_group == "Y88" |
age_group == "Y89" |
age_group == "Y90" |
age_group == "Y91" |
age_group == "Y92" |
age_group == "Y93" |
age_group == "Y94" |
age_group == "Y95" |
age_group == "Y96" |
age_group == "Y97" |
age_group == "Y98" |
age_group == "Y99" |
age_group == "Y100"
)
) %>%
group_by(a_iso) %>%
summarize_at("value",
sum,
na.rm = TRUE
)
colnames(z_pop_18p) <- c("a_iso","a_pop_18p")
# Filter for 60 and above
z_pop_60p <- z_pop_total %>%
filter(
gender == "BOTH" & (
age_group == "Y60" |
age_group == "Y61" |
age_group == "Y62" |
age_group == "Y63" |
age_group == "Y64" |
age_group == "Y65" |
age_group == "Y66" |
age_group == "Y67" |
age_group == "Y68" |
age_group == "Y69" |
age_group == "Y70" |
age_group == "Y71" |
age_group == "Y72" |
age_group == "Y73" |
age_group == "Y74" |
age_group == "Y75" |
age_group == "Y76" |
age_group == "Y77" |
age_group == "Y78" |
age_group == "Y79" |
age_group == "Y80" |
age_group == "Y81" |
age_group == "Y82" |
age_group == "Y83" |
age_group == "Y84" |
age_group == "Y85" |
age_group == "Y86" |
age_group == "Y87" |
age_group == "Y88" |
age_group == "Y89" |
age_group == "Y90" |
age_group == "Y91" |
age_group == "Y92" |
age_group == "Y93" |
age_group == "Y94" |
age_group == "Y95" |
age_group == "Y96" |
age_group == "Y97" |
age_group == "Y98" |
age_group == "Y99" |
age_group == "Y100"
)
) %>%
group_by(a_iso) %>%
summarize_at("value",
sum,
na.rm = TRUE
)
colnames(z_pop_60p) <- c("a_iso","a_pop_60p")
# Filter for total, male
z_pop_total_male <- z_pop_total %>%
filter(
gender == "MALE" & age_group == "ALL") %>%
group_by(a_iso) %>%
summarize_at("value",
sum,
na.rm = TRUE
)
colnames(z_pop_total_male) <- c("a_iso","a_pop_male")
# Filter for total, female
z_pop_total_fem <- z_pop_total %>%
filter(
gender == "FEMALE" & age_group == "ALL") %>%
group_by(a_iso) %>%
summarize_at("value",
sum,
na.rm = TRUE
)
colnames(z_pop_total_fem) <- c("a_iso","a_pop_fem")
# Consolidate population values into single dataframe
c_pop_disag <- left_join(z_pop_total_male, z_pop_total_fem, by = "a_iso") %>%
left_join(., z_pop_12p, by = "a_iso") %>%
left_join(., z_pop_18p, by = "a_iso") %>%
left_join(., z_pop_60p, by = "a_iso") %>%
full_join(., z_pop_hcw, by = "a_iso")
# Population coverage in target groups ------------------------------------
# Load datasets
b_uptake_target <-
data.frame(read_excel("data/input/data_export_WIISE_V_COV_UPTAKE_TARGETGROUP_LAST_MONTH_LONG.xlsx",
sheet = "v_COV_UPTAKE_TARGETGROUP_LAST_M"))
b_uptake_gender <-
data.frame(read_excel("data/input/data_export_WIISE_V_COV_UPTAKE_GENDER_LAST_MONTH_LONG.xlsx",
sheet = "v_COV_UPTAKE_GENDER_LAST_MONTH_"))
# Reduce columns & rename
c_uptake_target <- select(b_uptake_target, c("ISO_3_CODE",
"DATE",
"TARGET_GROUP",
"N_VACC_DOSE1",
"N_VACC_LAST_DOSE"))
colnames(c_uptake_target) <- c("a_iso","date", "target_group","adm_a1d","adm_fv")
c_uptake_gender <- select(b_uptake_gender, c("ISO_3_CODE",
"DATE",
"GENDER",
"N_VACC_DOSE1",
"N_VACC_LAST_DOSE"))
colnames(c_uptake_gender) <- c("a_iso","date", "gender","adm_a1d","adm_fv")
# Sort for healthcare workers, remove target columns & rename
c_uptake_hcw <- filter(c_uptake_target, target_group == "HW")
c_uptake_hcw <- select(c_uptake_hcw, -"target_group")
colnames(c_uptake_hcw) <- c("a_iso","adm_date_hcw", "adm_a1d_hcw", "adm_fv_hcw")
# Sort for elderly / 60+, remove target columns & rename
c_uptake_60p <- filter(c_uptake_target, target_group == "OLDER_60")
c_uptake_60p <- select(c_uptake_60p, -"target_group")
colnames(c_uptake_60p) <- c("a_iso","adm_date_60p", "adm_a1d_60p", "adm_fv_60p")
# Sort for males, remove target columns & rename
c_uptake_male <- filter(c_uptake_gender, gender  == "MALE")
c_uptake_male <- select(c_uptake_male, -"gender")
colnames(c_uptake_male) <- c("a_iso","adm_date_gender", "adm_a1d_male", "adm_fv_male")
# Sort for females, remove target columns & rename
c_uptake_fem <- filter(c_uptake_gender, gender == "FEMALE")
c_uptake_fem <- select(c_uptake_fem, -c("gender", "date"))
colnames(c_uptake_fem) <- c("a_iso","adm_a1d_fem", "adm_fv_fem")
# Merge dataframes
c_uptake_disag <- full_join(c_uptake_hcw, c_uptake_60p, by = "a_iso") %>%
full_join(., c_uptake_male, by = "a_iso") %>%
full_join(., c_uptake_fem, by = "a_iso")
source("eda/vxrate/vxrate_consolidate.r")
extract_vxrate_details <- function(c_vxrate_latest) {
print(" >> Remove duplicative base details from latest vxrate summary...")
c_vxrate_latest_red <-
select(
c_vxrate_latest,-c(
"a_continent",
"a_who_region",
"a_income_group",
"a_covax_status",
"a_unicef_region",
"a_name_short",
"a_name_long",
"a_who_subregion",
"a_who_status"
)
)
return(c_vxrate_latest_red)
}
merge_dataframes <- function(entity_characteristics, c_vxrate_latest_red, population_data, uptake_gender_data, b_who_dashboard) {
# Merge details, latest vxrate summary, population, target group admin. dataframes
a_data <-
left_join(entity_characteristics, c_vxrate_latest_red, by = "a_iso") %>%
left_join(., population_data) %>%
left_join(., uptake_gender_data)
# Merge WHO Dashboard data
a_data <- left_join(a_data, b_who_dashboard, by = c("a_iso" = "iso"))
return(a_data)
}
transform_vxrate_merge <- function(a_data) {
# Calculate introduction status
a_data <- a_data %>%
mutate(intro_status = if_else(
is.na(adm_td) | adm_td == 0,
"No product introduced",
"Product introduced"
))
# Assign population size category
a_data <- a_data %>%
mutate(a_pop_cat = if_else(
a_pop < 1000000,
"1) <1M",
if_else(
a_pop < 10000000,
"2) 1-10M",
if_else(
a_pop < 100000000,
"3) 10-100M",
if_else(a_pop >= 100000000, "4) 100M+",
NA_character_)
)
)
))
# Calculate theoretical fully vaccinated for non-reporters for current, lm, and 2m
a_data <- a_data %>%
mutate(adm_fv_homo = if_else(
adm_a1d == 0 & adm_fv == 0 & adm_booster == 0, (adm_td / 2),
if_else(adm_a1d == 0 & adm_fv == 0 & adm_booster != 0, ((adm_td - adm_booster)/ 2),
if_else(adm_a1d != 0 & adm_fv == 0 & adm_booster == 0, (adm_td - adm_a1d),
if_else(adm_a1d != 0 & adm_fv == 0 & adm_booster != 0, (adm_td - adm_a1d - adm_booster),
(adm_fv)))))) %>%
mutate(adm_fv_lm_homo = if_else(
adm_a1d_lm == 0 & adm_fv_lm == 0 & adm_booster_lm == 0, (adm_td_lm / 2),
if_else(adm_a1d_lm == 0 & adm_fv_lm == 0 & adm_booster_lm != 0, ((adm_td_lm - adm_booster_lm)/ 2),
if_else(adm_a1d_lm != 0 & adm_fv_lm == 0 & adm_booster_lm == 0, (adm_td_lm - adm_a1d_lm),
if_else(adm_a1d_lm != 0 & adm_fv_lm == 0 & adm_booster_lm != 0, (adm_td_lm - adm_a1d_lm - adm_booster_lm),
(adm_fv_lm)))))) %>%
mutate(adm_fv_2m_homo = if_else(
adm_a1d_2m == 0 & adm_fv_2m == 0, (adm_td_2m / 2),
if_else(adm_a1d_2m != 0 & adm_fv_2m == 0, (adm_td_2m - adm_a1d_2m),
(adm_fv_2m))))
# Calculate td and fv change from lm and 2m
a_data <- a_data %>%
mutate(adm_td_less_1m = adm_td - adm_td_lm) %>%
mutate(adm_td_1m_2m = adm_td_lm - adm_td_2m) %>%
mutate(adm_fv_less_1m = adm_fv_homo - adm_fv_lm_homo) %>%
mutate(adm_fv_1m_2m = adm_fv_lm_homo - adm_fv_2m_homo)
# Calculate adm_a1d and adm_fv coverage for current, lm, and 2m, including change
a_data <- a_data %>%
mutate(cov_total_a1d = adm_a1d / a_pop) %>%
mutate(cov_total_fv = if_else(a_who_region == "EUR", cov_total_fv_per100 / 100,
if_else((adm_fv_homo / a_pop) > 1, 1, (adm_fv_homo / a_pop)))) %>%
mutate(cov_total_fv_lw = adm_fv_lw / a_pop) %>%
mutate(cov_total_fv_lm = if_else((adm_fv_lm_homo / a_pop) > 1, 1, (adm_fv_lm_homo / a_pop))) %>%
mutate(cov_total_fv_2m = if_else((adm_fv_2m_homo / a_pop) > 1, 1, (adm_fv_2m_homo / a_pop))) %>%
mutate(cov_total_fv_less_1m = if_else((cov_total_fv - cov_total_fv_lm) < 0, 0, (cov_total_fv - cov_total_fv_lm)))  %>%
mutate(cov_total_fv_1m_2m = if_else((cov_total_fv_lm - cov_total_fv_2m) < 0, 0, (cov_total_fv_lm - cov_total_fv_2m))) %>%
mutate(cov_total_fv_less_1m_prop = cov_total_fv_less_1m / cov_total_fv)
# Assign coverage category for current and lw
a_data <- a_data %>%
mutate(cov_total_fv_cat = if_else(
cov_total_fv < 0.01,
"1) 0-1%",
if_else(
cov_total_fv < 0.1,
"2) 1-10%",
if_else(
cov_total_fv < 0.2,
"3) 10-20%",
if_else(
cov_total_fv < 0.4,
"4) 20-40%",
if_else(cov_total_fv >= 0.4, "5) 40%+",
NA_character_)
)
)
)
)) %>%
mutate(cov_total_fv_lw_cat = if_else(
cov_total_fv_lw < 0.01,
"1) 0-1%",
if_else(
cov_total_fv_lw < 0.1,
"2) 1-10%",
if_else(
cov_total_fv_lw < 0.2,
"3) 10-20%",
if_else(
cov_total_fv_lw < 0.4,
"4) 20-40%",
if_else(cov_total_fv_lw >= 0.4, "5) 40%+",
NA_character_)
)
)
)
))
# Calculate linear population coverage projection by 30 June 2022
a_data <- a_data %>%
mutate(cov_total_fv_atpace_30jun = (adm_fv_homo + (dvr_4wk_fv * (
as.numeric(as.Date("2022-06-30") - Sys.Date())
))) / a_pop)
# Indicator reporting status for target group-specific uptake data
a_data <- a_data %>%
mutate(adm_fv_hcw_repstat = if_else(adm_fv_hcw > 0, "Reporting", NA_character_)) %>%
mutate(adm_fv_60p_repstat = if_else(adm_fv_60p > 0, "Reporting", NA_character_)) %>%
mutate(adm_fv_gen_repstat = if_else(adm_fv_fem > 0, "Reporting", NA_character_))
# Calculate target group coverage figures
a_data <- a_data %>%
mutate(adm_fv_hcw_homo = if_else(adm_fv_hcw > a_pop_hcw, a_pop_hcw, adm_fv_hcw)) %>%
mutate(cov_hcw_fv = if_else((adm_fv_hcw_homo / a_pop_hcw) > 1, 1, (adm_fv_hcw_homo / a_pop_hcw))) %>%
mutate(adm_fv_gen = adm_fv_male + adm_fv_fem) %>%
mutate(cov_total_male_fv = adm_fv_male / a_pop_male) %>%
mutate(cov_total_fem_fv = adm_fv_fem / a_pop_fem) %>%
mutate(cov_60p_fv = adm_fv_60p / a_pop_60p)
# Calculate gender coverage difference in reporting countries
a_data <- a_data %>%
mutate(cov_total_gen_diff = cov_total_fem_fv - cov_total_male_fv)
# Calculate 4-week average daily rates as % of pop.
a_data <- a_data %>%
mutate(dvr_4wk_td_per = dvr_4wk_td / a_pop) %>%
mutate(dvr_4wk_fv_per = dvr_4wk_fv / a_pop) %>%
mutate(dvr_4wk_td_max_per = dvr_4wk_td_max / a_pop)
# Assign vaccination rate category
a_data <- a_data %>%
mutate(dvr_4wk_td_per_cat = if_else(
dvr_4wk_td_per < 0.0015,
"1) Low (< 0.15%*)",
if_else(
dvr_4wk_td_per < 0.0035,
"2) Medium (< 0.35%)",
if_else(
dvr_4wk_td_per < 0.0065,
"3) High (< 0.65%)",
if_else(dvr_4wk_td_per >= 0.0065, "4) Very high (> 0.65%)",
NA_character_)
)
)
))
# Calculate (percent) change in 4-week average daily vaccination rate & assign category
a_data <- a_data %>%
mutate(dvr_4wk_td_change_lm = dvr_4wk_td - dvr_4wk_td_lm) %>%
mutate(dvr_4wk_td_change_lm_per = dvr_4wk_td_change_lm / dvr_4wk_td_lm) %>%
mutate(
dvr_4wk_td_change_lm_per_cat = if_else(
dvr_4wk_td_change_lm_per <= -0.25,
"1) < (-25)%",
if_else(
dvr_4wk_td_change_lm_per >= 0.25,
"4) > 25%",
if_else(
dvr_4wk_td_change_lm_per <= 0,
"2) (-25)-0%",
if_else(dvr_4wk_td_change_lm_per > 0, "3) 0-25%",
NA_character_)
)
)
)
) %>%
mutate(
dvr_4wk_td_change_lm_trend = if_else(
dvr_4wk_td_change_lm_per <= -0.25,
"Downward",
if_else(
dvr_4wk_td_change_lm_per >= 0.25,
"Upward",
if_else(
dvr_4wk_td_change_lm_per < 0.25 &
dvr_4wk_td_change_lm_per > -0.25,
"Stable",
NA_character_
)
)
)
)
return(a_data)
}
View(transform_vxrate_merge)
View(extract_vxrate_details)
