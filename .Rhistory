source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
source("src/finance/run_finance.r")
source("src/demand_planning/run_demand_planning.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
finance_env <- run_financing()
demand_plan_env <- run_dp()
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/financing/run_financing.r")
source("eda/rank_bin/run_rank_bin.r")
source("eda/combination/run_combination.r")
vxrate_env <- run_vxrate(
c_vxrate_latest,
entity_characteristics,
c_vxrate_latest_red,
population_data,
uptake_gender_data,
b_who_dashboard,
b_smartsheet,
supply_secured,
delivery_courses_doses,
b_dp,
c_delivery_product,
b_fin_fund_del_sum
)
supplies_env <- run_eda_supplies(a_data)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data)
financing_env <- run_financing(a_data)
ranking_env <- run_binning(a_data)
combination_env <- run_combination(a_data)
# CONSOLIDATE
source("consolidate/run_consolidate.r")
consolidate_env <- run_consolidate(a_data)
# Export
source("eda/export/run_export.r")
# export_env <- run_export()
View(a_data)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
all_df <- list(
"0_base_data" = a_data,
"1_absorption_month" = d_absorption,
"1_absorption_month_country" = combined,
"1_stock" = combined_three,
"1_adm_long_smooth" = b_vxrate_amc_smooth,
"1_adm_all_long" = b_vxrate_pub,
"1_delivery_doses" = supply_received_by_product,
"1_secview" = z_temp,
"1_secview_lm" = z_temp_lm,
"1_secview_all" = z_secview_long,
"1_funding_source" = b_fin_fund_del_source,
"2_dvr_perchange_count" = f_dvr_change_count,
"2_cov_change_count" = f_cov_change_count,
"2_dvr_perchange_count_af" = f_dvr_change_count_af,
"2_cov_change_count_af" = f_cov_change_count_af,
"8_dvr_cat" = e_vrcat_all,
"8_dvr_lm_trend" = e_trend_all,
"8_tarpast_cat" = e_tar_past_all,
"8_curtar_cat" = e_tar_cur_all,
"8_curtar_scale_cat" = e_tar_cur_scale_all,
"8_booster_status" = e_booster_all,
"8_secdelpu_cat" = e_secdelpu_all,
"8_cov_cat" = e_cov_all,
"8_ndvp_tar_cat" = e_ndvp_all,
"9_values" = z_values
)
#  Clear environment
rm(list = ls())
# Load packages
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
library("tidyverse")
library("httr")
library("jsonlite")
library("AzureAuth")
library("dotenv")
# Configuation Variables
load_dot_env(".env")
my_tokens <- Sys.getenv(
list(
"authn_resource",
"authn_tenant",
"authn_app",
"authn_auth_type",
"authn_password",
"authn_use_cache"
)
)
print(" > Getting Azure tokens...")
tok0 <- get_azure_token(
resource = my_tokens[[1]],
tenant = my_tokens[[2]],
app = my_tokens[[3]],
auth_type = my_tokens[[4]],
password = my_tokens[[5]],
use_cache = my_tokens[[6]]
)
access_token <- tok0$credentials$access_token
bearer <- paste("Bearer", access_token)
headers <- add_headers(Authorization = bearer)
print(" > Tokens obtained successfully...")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# STATIC DATES
.GlobalEnv$refresh_date <- as.Date("2022-05-05")
.GlobalEnv$t70_deadline <- as.Date("2022-06-30")
.GlobalEnv$dataset_date <- "2022-04-28" # dataset_date is passed to sec_date
.GlobalEnv$del_date <- as.Date("2022-05-05")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
source("src/finance/run_finance.r")
source("src/demand_planning/run_demand_planning.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
finance_env <- run_financing()
demand_plan_env <- run_dp()
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/financing/run_financing.r")
source("eda/rank_bin/run_rank_bin.r")
source("eda/combination/run_combination.r")
vxrate_env <- run_vxrate(
c_vxrate_latest,
entity_characteristics,
c_vxrate_latest_red,
population_data,
uptake_gender_data,
b_who_dashboard,
b_smartsheet,
supply_secured,
delivery_courses_doses,
b_dp,
c_delivery_product,
b_fin_fund_del_sum
)
supplies_env <- run_eda_supplies(a_data)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data)
financing_env <- run_financing(a_data)
ranking_env <- run_binning(a_data)
combination_env <- run_combination(a_data)
# CONSOLIDATE
source("consolidate/run_consolidate.r")
consolidate_env <- run_consolidate(a_data)
# EXPORT
print(" > Exporting data output from pipeline to Excel Workbooks...")
all_df <- list(
"0_base_data" = a_data,
"1_absorption_month" = d_absorption,
"1_absorption_month_country" = combined,
"1_stock" = combined_three,
"1_adm_long_smooth" = b_vxrate_amc_smooth,
"1_adm_all_long" = b_vxrate_pub,
"1_delivery_doses" = supply_received_by_product,
"1_secview" = z_temp,
"1_secview_lm" = z_temp_lm,
"1_secview_all" = z_secview_long,
"1_funding_source" = b_fin_fund_del_source,
"2_dvr_perchange_count" = f_dvr_change_count,
"2_cov_change_count" = f_cov_change_count,
"2_dvr_perchange_count_af" = f_dvr_change_count_af,
"2_cov_change_count_af" = f_cov_change_count_af,
"8_dvr_cat" = e_vrcat_all,
"8_dvr_lm_trend" = e_trend_all,
"8_tarpast_cat" = e_tar_past_all,
"8_curtar_cat" = e_tar_cur_all,
"8_curtar_scale_cat" = e_tar_cur_scale_all,
"8_booster_status" = e_booster_all,
"8_secdelpu_cat" = e_secdelpu_all,
"8_cov_cat" = e_cov_all,
"8_ndvp_tar_cat" = e_ndvp_all,
"9_values" = z_values
)
# write_xlsx(all_df, "data/output/220505_output_powerbi.xlsx")
# write_xlsx(api, "data/output/220505_output_api.xlsx")
print(" > Output exported successfully!")
View(vaccines_env)
View(pop_env)
View(population_data)
View(pop_env)
pop_env[["uptake_gender_data"]][["adm_fv_male"]]
# rows 600 - 978
run_population <- function(env = .GlobalEnv) {
source("src/population/population_base.r")
source("src/population/population_hcw.r")
source("src/population/population_uptake.r")
print(" > Starting local environment for base population")
print(" > Population healthcare workers...")
population_hcw <- load_population_hcw()
population_hcw <- transform_population_hcw(
population_hcw
)
print(" > Done.")
print(" > Base population...")
population_base <- load_base_population()
population_data <- transform_base_population(
population_base, population_hcw
)
print(" > Done.")
print(" > Population uptake...")
datalist <- load_population_uptake()
uptake_gender_data <- transform_population_uptake(
as.data.frame(datalist[1]),
as.data.frame(datalist[2])
)
print(" > Done.")
print(" > Returning to global environment. ")
print(" > Loading data back to global environment...")
env$population_data <- population_data
env$uptake_gender_data <- uptake_gender_data
return(environment())
}
run_population()
View(uptake_gender_data)
View(uptake_gender_data)
View(population_data)
View(population_data)
View(pop_env)
#  Clear environment
rm(list = ls())
# Load packages
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
library("tidyverse")
library("httr")
library("jsonlite")
library("AzureAuth")
library("dotenv")
# Configuation Variables
load_dot_env(file = ".env")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# STATIC DATES
.GlobalEnv$refresh_date <- as.Date("2022-05-13")
.GlobalEnv$t70_deadline <- as.Date("2022-06-30")
.GlobalEnv$dataset_date <- "2022-05-05" # dataset_date is passed to sec_date
.GlobalEnv$del_date <- as.Date("2022-05-12")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
source("src/finance/run_finance.r")
source("src/demand_planning/run_demand_planning.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
finance_env <- run_financing()
demand_plan_env <- run_dp()
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/financing/run_financing.r")
source("eda/rank_bin/run_rank_bin.r")
source("eda/combination/run_combination.r")
vxrate_env <- run_vxrate(
c_vxrate_latest,
entity_characteristics,
c_vxrate_latest_red,
population_data,
uptake_gender_data,
b_who_dashboard,
b_smartsheet,
supply_secured,
delivery_courses_doses,
b_dp,
c_delivery_product,
b_fin_fund_del_sum
)
supplies_env <- run_eda_supplies(a_data)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data)
financing_env <- run_financing(a_data)
ranking_env <- run_binning(a_data)
combination_env <- run_combination(a_data)
# CONSOLIDATE
source("consolidate/run_consolidate.r")
consolidate_env <- run_consolidate(a_data)
# EXPORT
print(" > Exporting data output from pipeline to Excel Workbooks...")
all_df <- list(
"0_base_data" = a_data,
"1_absorption_month" = d_absorption,
"1_absorption_month_country" = combined,
"1_stock" = combined_three,
"1_adm_long_smooth" = b_vxrate_amc_smooth,
"1_adm_all_long" = b_vxrate_pub,
"1_delivery_doses" = supply_received_by_product,
"1_secview" = z_temp,
"1_secview_lm" = z_temp_lm,
"1_secview_all" = z_secview_long,
"1_funding_source" = b_fin_fund_del_source,
"2_dvr_perchange_count" = f_dvr_change_count,
"2_cov_change_count" = f_cov_change_count,
"2_dvr_perchange_count_af" = f_dvr_change_count_af,
"2_cov_change_count_af" = f_cov_change_count_af,
"8_dvr_cat" = e_vrcat_all,
"8_dvr_lm_trend" = e_trend_all,
"8_tarpast_cat" = e_tar_past_all,
"8_curtar_cat" = e_tar_cur_all,
"8_curtar_scale_cat" = e_tar_cur_scale_all,
"8_booster_status" = e_booster_all,
"8_secdelpu_cat" = e_secdelpu_all,
"8_cov_cat" = e_cov_all,
"8_ndvp_tar_cat" = e_ndvp_all,
"9_values" = z_values
)
# write_xlsx(all_df, "data/output/220513_output_powerbi.xlsx")
# write_xlsx(api, "data/output/220513_output_api.xlsx")
print(" > Output exported Excel successfully!")
View(population_data)
View(pop_env)
data <- data.frame(
var    = c('price', 'price', 'fuelEconomy', 'fuelEconomy',
'accelTime', 'accelTime'),
level  = rep(c('high', 'low'), 3),
value  = c(10, 20, 25, 15, 10, 6),
result = c(0.95, 0.15, 0.90, 0.60, 0.85, 0.75)
)
View(data)
# Make a tornado plot of the sensitivity analysis results:
installed.packages(ggplot2)
# Make a tornado plot of the sensitivity analysis results:
installed.packages(ggplot2)
# Make a tornado plot of the sensitivity analysis results:
installed.packages("ggplot2")
library("ggplot2")
ggtornado(
data = data,
baseline = 0.8, # Baseline result
var    = 'var',
level  = 'level',
value  = 'value',
result = 'result'
)
installed.packages("ggplot2")
library("ggplot2")
ggtornado(
data = data,
baseline = 0.8, # Baseline result
var    = 'var',
level  = 'level',
value  = 'value',
result = 'result'
)
ggtornado(
data = data,
baseline = 0.8, # Baseline result
var    = 'var',
level  = 'level',
value  = 'value',
result = 'result'
)
install.packages("ggplot2", dependencies=TRUE)
install.packages("ggplot2", dependencies = TRUE)
library("ggplot2")
ggtornado(
data = data,
baseline = 0.8, # Baseline result
var    = 'var',
level  = 'level',
value  = 'value',
result = 'result'
)
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
ggtornado(
data = data,
baseline = 0.8, # Baseline result
var    = 'var',
level  = 'level',
value  = 'value',
result = 'result'
)
library(ggplot2)
dat <- data.frame(
variable=c("A","B","A","B"),
Level=c("Top-2","Top-2","Bottom-2","Bottom-2"),
value=c(.2,.3,-.2,-.3)
)
View(dat)
ggplot(dat, aes(variable, value, fill=Level)) + geom_bar(position="dodge")
# test tornado plot
library(ggplot2)
dat <- data.frame(
variable=c("A","B","A","B"),
Level=c("Top-2","Top-2","Bottom-2","Bottom-2"),
value=c(.2,.3,-.2,-.3)
)
ggplot(dat, aes(variable, value, fill=Level)) + geom_bar(position="dodge")
## plots offset, as expected
# tornado
ggplot(dat, aes(variable, value, fill=Level)) +
geom_bar(position="identity") +
coord_flip()
#  Adapt for our data....Age by Sex
Agegroups = c("15-24","25-34","35-44","45-54","55-64","65+")
dat2 <- data.frame(
Age=c("15-24","25-34","35-44","45-54","55-64","65+", "15-24","25-34","35-44","45-54","55-64","65+") ,
# ?rep(Agegroups, 2),  # repeat ages for each level of sex
Sex= c("Male","Female","Male","Female","Male","Female","Male","Female","Male","Female", "Male", "Female"),
# rep(c("Male","Female"), length(Agegroups))?
value=c(.2,.3,.4,.1,.05, .04, -.24,-.28,-.29,-.12,-.06, -.03)
)
ggplot(dat2, aes(x=Age, y=value, fill=Sex)) +
geom_bar(stat="identity", position="identity") +  # error if stat = not included.  don't know why?!
coord_flip()
dat <- data.frame(
variable=c("A","B","A","B"),
Level=c("Top-2","Top-2","Bottom-2","Bottom-2"),
value=c(.2,.3,-.2,-.3)
)
ggplot(dat, aes(variable, value, fill=Level)) + geom_bar(position="dodge")
ggplot(dat, aes(variable, value, fill=Level)) +
geom_bar(position = "identity") +
coord_flip()
# test tornado plot
library(ggplot2)
dat <- data.frame(
variable=c("A","B","A","B"),
Level=c("Top-2","Top-2","Bottom-2","Bottom-2"),
value=c(.2,.3,-.2,-.3)
)
ggplot(dat, aes(variable, value, fill=Level)) + geom_bar(position="dodge")
## plots offset, as expected
# tornado
ggplot(dat, aes(variable, value, fill=Level)) +
geom_bar(position = "identity") +
coord_flip()
#  Adapt for our data....Age by Sex
Agegroups = c("15-24","25-34","35-44","45-54","55-64","65+")
dat2 <- data.frame(
Age=c("15-24","25-34","35-44","45-54","55-64","65+", "15-24","25-34","35-44","45-54","55-64","65+") ,
# ?rep(Agegroups, 2),  # repeat ages for each level of sex
Sex= c("Male","Female","Male","Female","Male","Female","Male","Female","Male","Female", "Male", "Female"),
# rep(c("Male","Female"), length(Agegroups))?
value=c(.2,.3,.4,.1,.05, .04, -.24,-.28,-.29,-.12,-.06, -.03)
)
ggplot(dat2, aes(x=Age, y=value, fill=Sex)) +
geom_bar(stat="identity", position="identity") +  # error if stat = not included.  don't know why?!
coord_flip()
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
source("~/GitHub/covid19_vaccination_data/app.R", echo=TRUE)
