# Ingest the 2 file from DAMC folder
# Take 3 variables from each of these files
# - total doses administered
# - total_doses_1d
# - fully vaccinated
# a1d - at least 1 dose
# adm_td - total dose
# adm_fv - fully vaccinated
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
library("tidyverse")
# Load pre_jan 2022 data
pre_jan <-
data.frame(read_excel("data/_input/lily/pre_jan.xlsx",
sheet = "data_summary"))
pre_jan <- select(
pre_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(pre_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
post_jan <- data.frame(read_excel("data/_input/lily/post_jan.xlsx",
sheet = "data_summary"))
post_jan <- select(
post_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(post_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
# Fully vaccinated
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = as.numeric(adm_fv / a_pop))
# Load pre_jan 2022 data
pre_jan <-
data.frame(read_excel("data/_input/lily/pre_jan.xlsx",
sheet = "data_summary"))
setwd("C:/Users/xander/OneDrive - Dalberg Global Development Advisors/Projects/covid19_vaccination_analysis")
# Load pre_jan 2022 data
pre_jan <-
data.frame(read_excel("data/_input/lily/pre_jan.xlsx",
sheet = "data_summary"))
pre_jan <- select(
pre_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(pre_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
View(pre_jan)
post_jan <- data.frame(read_excel("data/_input/lily/post_jan.xlsx",
sheet = "data_summary"))
post_jan <- select(
post_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(post_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
View(post_jan)
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = as.numeric(adm_fv / a_pop))
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = adm_fv / a_pop)
pre_jan_fv
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = pre_jan$adm_fv / pre_jan$a_pop)
# Fully vaccinated
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = adm_fv / a_pop)
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = adm_fv[,5] / a_pop[,2])
# # Fully vaccinated
pre_jan[,1]
# # Fully vaccinated
pre_jan[,5]
# # Fully vaccinated
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop)
# # Fully vaccinated
pre_jan_fv <- pre_jan %>%
mutate(cov_total_fv = as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
pre_jan$cov_total_fv(as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
# # Fully vaccinated
pre_jan$cov_total_fv <- (as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
pre_jan_fv
pre_jan
# post_jan data
## Fully vaccinated
post_jan$cov_total_fv <- (as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
# post_jan data
## Fully vaccinated
post_jan$cov_total_fv <- (as.numeric(post_jan$adm_fv) / as.numeric(post_jan$a_pop))
# Ingest the 2 file from DAMC folder
# Take 3 variables from each of these files
# - total doses administered
# - total_doses_1d
# - fully vaccinated
# a1d - at least 1 dose
# adm_td - total dose
# adm_fv - fully vaccinated
# library("readxl")
# library("writexl")
# library("countrycode")
# library("dplyr")
# library("lubridate")
# library("tidyr")
# library("data.table")
# library("bit64")
# library("openxlsx")
# library("tidyverse")
# Load pre_jan 2022 data
pre_jan <-
data.frame(read_excel("data/_input/lily/pre_jan.xlsx",
sheet = "data_summary"))
pre_jan <- select(
pre_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(pre_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
post_jan <- data.frame(read_excel("data/_input/lily/post_jan.xlsx",
sheet = "data_summary"))
post_jan <- select(
post_jan,
c(
"iso_code",
"population",
"total_doses",
"at_least_one_dose",
"fully_vaccinated"
)
)
colnames(post_jan) <- c(
"a_iso",
"a_pop",
"adm_td",
"adm_a1d",
"adm_fv"
)
# pre_jan data
## Fully vaccinated persons
pre_jan$cov_total_fv <- (as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
# post_jan data
## Fully vaccinated persons
post_jan$cov_total_fv <- (as.numeric(post_jan$adm_fv) / as.numeric(post_jan$a_pop))
# Export data to Excel
all_df <- list(
"pre_jan_data" = pre_jan,
"post_jan_data" = post_jan
)
write_xlsx(all_df, "data/output/lilys_output.xlsx")
View(all_df)
## Fully vaccinated persons
pre_jan$cov_total_fv <- (as.numeric(pre_jan$adm_fv) / as.numeric(pre_jan$a_pop))
pre_jan$Then <- as.numeric(pre_jan$cov_total_fv * 100)
# post_jan data
## Fully vaccinated persons
post_jan$cov_total_fv <- (as.numeric(post_jan$adm_fv) / as.numeric(post_jan$a_pop))
post_jan$Now <- as.numeric(post_jan$cov_total_fv * 100)
summ_data <- as.numeric(post_jan$Now - pre_jan$Then)
summ_data
summ_data <- as.data.frame(post_jan$Now - pre_jan$Then)
summ_data
# Export data to Excel
all_df <- list(
"pre_jan_data" = pre_jan,
"post_jan_data" = post_jan,
"summary" = summ_data
)
write_xlsx(all_df, "data/output/lilys_output.xlsx")
# Summary
summ_data <- as.numeric(post_jan$Now - pre_jan$Then)
summ_data
# Summary
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data <- as.numeric(Now - Then)
summ_data
# Export data to Excel
all_df <- list(
"pre_jan_data" = pre_jan,
"post_jan_data" = post_jan,
"summary" = summ_data
)
write_xlsx(all_df, "data/output/lilys_output.xlsx")
summ_data
View(summ_data)
as.data.frame(summ_data)
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data <- as.data.frame(Now - Then)
summ_data
# Export data to Excel
all_df <- list(
"pre_jan_data" = pre_jan,
"post_jan_data" = post_jan,
"summary" = summ_data
)
write_xlsx(all_df, "data/output/lilys_output.xlsx")
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data <- as.numeric(Now - Then)
summ_data <- as.data.frame(summ_data)
# Summary
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data <- as.numeric(summ_data$Now - summ_data$Then)
summ_data <- as.numeric(summ_data$Now) - as.numeric(summ_data$Then)
summ_data <- as.numeric(Now - Then)
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data$perc_change <- as.numeric(Now - Then)
summ_data <- as.data.frame(summ_data)
# Summary
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data$perc_change <- as.numeric(Now - Then)
summ_data$perc_change <- as.numeric(summ_data$Now - summ_data$Then)
# Summary
summ_data$Now <- post_jan$Now
summ_data$Then <- pre_jan$Then
summ_data
# Export data to Excel
all_df <- list(
"pre_jan_data" = pre_jan,
"post_jan_data" = post_jan
)
write_xlsx(all_df, "data/output/lilys_output.xlsx")
#  Clear environment
rm(list = ls())
# Load packages
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
library("tidyverse")
library("httr")
library("jsonlite")
library("AzureAuth")
library("dotenv")
# Configuation Variables
load_dot_env(file = ".env")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# STATIC DATES
.GlobalEnv$refresh_date <- as.Date("2022-05-13")
.GlobalEnv$t70_deadline <- as.Date("2022-06-30")
.GlobalEnv$dataset_date <- "2022-05-05" # dataset_date is passed to sec_date
.GlobalEnv$del_date <- as.Date("2022-05-12")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
source("src/finance/run_finance.r")
source("src/demand_planning/run_demand_planning.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
finance_env <- run_financing()
demand_plan_env <- run_dp()
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/financing/run_financing.r")
source("eda/rank_bin/run_rank_bin.r")
source("eda/combination/run_combination.r")
vxrate_env <- run_vxrate(
c_vxrate_latest,
entity_characteristics,
c_vxrate_latest_red,
population_data,
uptake_gender_data,
b_who_dashboard,
b_smartsheet,
supply_secured,
delivery_courses_doses,
b_dp,
c_delivery_product,
b_fin_fund_del_sum
)
supplies_env <- run_eda_supplies(a_data)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data)
financing_env <- run_financing(a_data)
ranking_env <- run_binning(a_data)
combination_env <- run_combination(a_data)
# CONSOLIDATE
source("consolidate/run_consolidate.r")
consolidate_env <- run_consolidate(a_data)
# EXPORT
print(" > Exporting data output from pipeline to Excel Workbooks...")
all_df <- list(
"0_base_data" = a_data,
"1_absorption_month" = d_absorption,
"1_absorption_month_country" = combined,
"1_stock" = combined_three,
"1_adm_long_smooth" = b_vxrate_amc_smooth,
"1_adm_all_long" = b_vxrate_pub,
"1_delivery_doses" = supply_received_by_product,
"1_secview" = z_temp,
"1_secview_lm" = z_temp_lm,
"1_secview_all" = z_secview_long,
"1_funding_source" = b_fin_fund_del_source,
"2_dvr_perchange_count" = f_dvr_change_count,
"2_cov_change_count" = f_cov_change_count,
"2_dvr_perchange_count_af" = f_dvr_change_count_af,
"2_cov_change_count_af" = f_cov_change_count_af,
"8_dvr_cat" = e_vrcat_all,
"8_dvr_lm_trend" = e_trend_all,
"8_tarpast_cat" = e_tar_past_all,
"8_curtar_cat" = e_tar_cur_all,
"8_curtar_scale_cat" = e_tar_cur_scale_all,
"8_booster_status" = e_booster_all,
"8_secdelpu_cat" = e_secdelpu_all,
"8_cov_cat" = e_cov_all,
"8_ndvp_tar_cat" = e_ndvp_all,
"9_values" = z_values
)
# write_xlsx(all_df, "data/output/220513_output_powerbi.xlsx")
# write_xlsx(api, "data/output/220513_output_api.xlsx")
print(" > Output exported successfully!")
View(a_data)
View(c_vxrate_latest)
View(b_vxrate)
View(entity_env)
entity_env[["entity_characteristics"]][["a_csc_status"]]
