"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
# SET WD
# setwd("C:/Users/Dalberg/Documents/GitHub/covid19_vaccination_data") #Donald
setwd("C:/Users/rafae/Desktop/covid19_vaccination_analysis") #setwd() #Rafael
# CLEAR ENVIRONMENT
rm(list = ls())
# PACKAGES
lib <- c("tidyverse",
"openxlsx",
"readxl",
"writexl",
"countrycode",
"lubridate",
"data.table",
"bit64",
"httr",
"jsonlite",
"AzureAuth",
"dotenv",
"reticulate")
lib_na <- lib[!(lib %in% installed.packages()[, "Package"])]
if (length(lib_na)) install.packages(lib_na)
lapply(lib, library, character.only = TRUE)
# STATIC VARIABLES
.GlobalEnv$refresh_date <- as.Date("2022-07-26")
.GlobalEnv$sec_date <- as.Date("2022-07-20")
.GlobalEnv$del_date <- as.Date("2022-07-21")
.GlobalEnv$t70_deadline <- as.Date("2022-12-31")
.GlobalEnv$auto_cleaning <- TRUE # set to FALSE for no automised cleaning
.GlobalEnv$adm_api <- FALSE # set to FALSE to use base_dvr_current.xlsx
.GlobalEnv$refresh_api <- TRUE # set to FALSE to use last API call
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
source("helpers/api.r")
api_env <- run_api()
