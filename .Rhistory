b_pop_total <-
data.frame(read_excel("data/input/static/base_population.xlsx",
sheet = "base_population"))
b_pop_total <-
data.frame(read_excel("input/static/base_population.xlsx",
sheet = "base_population"))
b_pop_total <-
data.frame(read_excel("data/input/static/base_population.xlsx",
sheet = "base_population"))
# Create a, b, c, d variables
a <- c(10,20,30,40)
b <- c('book', 'pen', 'textbook', 'pencil_case')
c <- c(TRUE,FALSE,TRUE,FALSE)
d <- c(2.5, 8, 10, 7)
# Join the variables to create a data frame
df <- data.frame(a,b,c,d)
df
# Name the data frame
names(df) <- c('ID', 'items', 'store', 'price')
df
# Print the structure
str(df)
## Select row 1 in column 2
df[1,2]
## Select Rows 1 to 2
df[1:2,]
## Select Columns 1
df[,1]
## Select Rows 1 to 3 and columns 3 to 4
df[1:3, 3:4]
# Slice with columns name
df[, c('ID', 'store')]
# Add `quantity` to the `df` data frame
df$quantity <- quantity
df
# Create a new vector
quantity <- c(10, 35, 40, 5)
# Add `quantity` to the `df` data frame
df$quantity <- quantity
df
# Select the column ID
df$ID
# Select price above 5
subset(df, subset = store = "TRUE")
# Select price above 5
subset(df, subset = price > 5)
# Vector with numeric from 1 up to 5
vect  <- 1:5
# A 2x 5 matrix
mat  <- matrix(1:9, ncol = 5)
# A 2x 5 matrix
mat  <- matrix(1:9, ncol = 5)
dim(mat)
View(mat)
# select the 10th row of the built-in R data set EuStockMarkets
df <- EuStockMarkets[1:10,]
# Create a, b, c, d variables
a <- c(10,20,30,40)
b <- c('book', 'pen', 'textbook', 'pencil_case')
c <- c(TRUE,FALSE,TRUE,FALSE)
d <- c(2.5, 8, 10, 7)
# Join the variables to create a data frame
df <- data.frame(a,b,c,d)
df
# Name the data frame
names(df) <- c('ID', 'items', 'store', 'price')
df
# Print the structure
str(df)
## Select row 1 in column 2
df[1,2]
## Select Rows 1 to 2
df[1:2,]
## Select Columns 1
df[,1]
## Select Rows 1 to 3 and columns 3 to 4
df[1:3, 3:4]
# Slice with columns name
df[, c('ID', 'store')]
# Create a new vector
quantity <- c(10, 35, 40, 5)
# Add `quantity` to the `df` data frame
df$quantity <- quantity
df
# Select the column ID
df$ID
# Select price above 5
subset(df, subset = price > 5)
# Vector with numeric from 1 up to 5
vect  <- 1:5
# A 2x 5 matrix
mat  <- matrix(1:9, ncol = 5)
dim(mat)
# select the 10th row of the built-in R data set EuStockMarkets
df1 <- EuStockMarkets[1:10,]
View(df1)
# Construct list with these vec, mat, and df:
my_list <- list(vect, mat, df)
my_list
# Construct list with these vec, mat, and df:
my_list <- list(vect, mat, df1)
my_list
# Print second element of the list
my_list[[2]]
PATH <-'https://raw.githubusercontent.com/guru99-edu/R-Programming/master/prison.csv'
df2 <- read.csv(PATH)[1:5]
head(df2, 5)
# Structure of the data
str(df)
# Structure of the data
str(df2)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
set.seed(1234)
data_frame <- tibble(
c1 = rnorm(50, 5, 1.5),
c2 = rnorm(50, 5, 1.5),
c3 = rnorm(50, 5, 1.5),
c4 = rnorm(50, 5, 1.5),
c5 = rnorm(50, 5, 1.5)
)
# Sort by c1
df3 <-data_frame[order(data_frame$c1),]
head(df3)
# Sort by c3 and c4
df4 <-data_frame[order(data_frame$c3, data_frame$c4),]
head(df4)
# Sort by c3(descending) and c4(acending)
df5 <-data_frame[order(-data_frame$c3, data_frame$c4),]
head(df5)
View(my_list)
View(my_list)
my_list[[1]]
my_list[[3]]
# Clear environment
rm(list = ls())
# Load packages
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
# Entity characteristics --------------------------------------------------
# Load entity base data
b_details <-
data.frame(read_excel("input/static/base_entitydetails.xlsx",
sheet = "data"))
# Load entity base data
b_details <-
data.frame(read_excel("data/_input/static/base_entitydetails.xlsx",
sheet = "data"))
# Reduce number of rows/rename columns
b_details_red <-
select(
b_details,
c(
"CODE",
"NAMEWORKEN",
"ABREVPUBLEN",
"CONTINENT",
"WHOREGIONC",
"WHO14SUBREGIONS",
"UNICEFREGION",
"WHO_LEGAL_STATUS_TITLE",
"COVAX",
"WBINCOMESTATUS"
)
)
colnames(b_details_red) <-
c(
"a_iso",
"a_name_long",
"a_name_short",
"a_continent",
"a_who_region",
"a_who_subregion",
"a_unicef_region",
"a_who_status",
"a_covax_status",
"a_income_group"
)
# Rework WHO region and income group
b_details_red <- b_details_red %>%
mutate (a_who_region = if_else(
a_who_region == "AMRO",
"AMR",
if_else(
a_who_region == "AFRO",
"AFR",
if_else(
a_who_region == "EMRO",
"EMR",
if_else(
a_who_region == "EURO",
"EUR",
if_else(
a_who_region == "SEARO",
"SEAR",
if_else(a_who_region == "WPRO", "WPR",
"Other")
)
)
)
)
))
b_details_red <- b_details_red %>%
mutate(a_income_group = if_else(
grepl("High income", a_income_group),
"HIC",
if_else(
a_income_group == "Upper middle income",
"UMIC",
if_else(
a_income_group == "Lower middle income",
"LMIC",
if_else(a_income_group == "Low income", "LIC",
"Other")
)
)
))
# Load entity base data
b_details <-
data.frame(read_excel("data/_input/static/base_entitydetails.xlsx",
sheet = "data"))
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
export_env <- run_export()
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
export_env <- run_export()
breaks <- c(0, 1000000, 10000000, 100000000)
tags <- c("1) <1M", "2) 1-10M", "3) 10-100M", "4) 100M+")
group_tags <- cut(
a_data$a_pop,
breaks = breaks,
include.lowest = TRUE,
right = FALSE,
labels = tags
)
a_data$a_pop_cat <- group_tags
x <- 1:10
x_cut <- cut(x, breaks = c(0, 4, 6, 7, 10))    # Apply cut()
x_cut
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
library("tidyverse")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
export_env <- run_export()
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
export_env <- run_export()
setwd("~/Documents/DDI/covid19_vaccination_analysis")
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
export_env <- run_export()
View(a_data)
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
#export_env <- run_export()
View(a_data)
library("readxl")
library("writexl")
library("countrycode")
library("dplyr")
library("lubridate")
library("tidyr")
library("data.table")
library("bit64")
library("openxlsx")
# HELPERS
source("helpers/joins.r")
source("helpers/transformations.r")
# ETL
source("src/base/run_base.r")
source("src/entity/run_entity.r")
source("src/population/run_population.r")
source("src/supply/run_supply.R")
source("src/vaccines/run_vaccines.r")
base_env <- run_base()
entity_env <- run_entity()
pop_env <- run_population()
supply_env <- run_supply()
vaccines_env <- run_vaccines(entity_characteristics)
# EDA
source("eda/vxrate/run_vxrate.r")
source("eda/supplies/run_supplies.r")
source("eda/coverage/run_coverage.r")
source("eda/product/run_product.r")
source("eda/rank-bin/run_rank_bin.r")
source("eda/consolidate/run_consolidate.r")
source("eda/export/run_export.r")
vxrate_env <- run_vxrate(entity_characteristics, population_data, uptake_gender_data, c_vxrate_latest)
supplies_env <- run_eda_supplies(a_data, supply_secured, delivery_courses_doses)
coverage_env <- run_coverage(a_data)
product_env <- run_product(a_data, base_env$b_smartsheet, base_env$b_csl)
ranking_env <- run_binning(a_data)
consolidate_env <- run_consolidate(a_data)
#export_env <- run_export()
View(a_data)
